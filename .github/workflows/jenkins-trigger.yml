name: Trigger Jenkins Job and Retrieve Output on "/runtests" Comment

on:
  issue_comment:
    types:
      - created
  pull_request:
    types:
      - opened 

jobs:
  trigger-jenkins-job:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Jenkins Job
        if: ${{ steps.comment.outputs.content == '/runtests' || github.event_name == 'pull_request' }}
        run: |
          # Construct the Jenkins job's build trigger URL using the secret
          JENKINS_JOB_URL="${{ secrets.JENKINS_SERVER_URL }}/job/jenkins-test/build?token=jenkinstest"

          
          # Trigger the Jenkins job using curl with username and API token
          RESPONSE=$(curl -k -X POST -s -i -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" "${JENKINS_JOB_URL}")

          # Extract the build URL from the response headers
          BUILD_URL=$(echo "$RESPONSE" | grep -oP "Location: \K(.*)" | tr -d '\r')

          # Extract the build number from the BUILD_URL
          BUILD_NUMBER=$(basename "$BUILD_URL" | tr -d '/')

          # Poll the Jenkins queue API to check if the job has started
          while [ "$(curl -k -s "${{ secrets.JENKINS_SERVER_URL }}/queue/item/${BUILD_NUMBER}/api/json" -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" | jq -r '.executable.number')" == "null" ]; do
              echo "Job is waiting in the queue..."
              sleep 10
          done

          # Retrieve the build URL once the job has started
          curl -k -s "${{ secrets.JENKINS_SERVER_URL }}/queue/item/${BUILD_NUMBER}/api/json" -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" | jq
          BUILD_NUMBER=$(curl -k -s "${{ secrets.JENKINS_SERVER_URL }}/queue/item/${BUILD_NUMBER}/api/json" -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" | jq -r '.executable.number')

          # Poll the Jenkins API to check if the build has completed
          while [ "$(curl -k -s "${{ secrets.JENKINS_SERVER_URL }}/job/jenkins-test/${BUILD_NUMBER}/api/json" -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" | jq -r '.building')" == "true" ]; do
              echo "Build in progress..."
              sleep 10
          done

          # Retrieve the console output of the Jenkins job
          CONSOLE_OUTPUT=$(curl -k -s "${{ secrets.JENKINS_SERVER_URL }}/job/jenkins-test/${BUILD_NUMBER}/consoleText" -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}")
          echo "$CONSOLE_OUTPUT"

          if [ "$(curl -k -s "${{ secrets.JENKINS_SERVER_URL }}/job/jenkins-test/${BUILD_NUMBER}/api/json" -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" | jq -r '.result')" != "SUCCESS" ]; then
            echo "Job failed..."
            exit 1
          fi

      - name: Get PR details
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      - name: Set commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      - name: Print stuff
        run: echo "Hello dudes!"

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          
